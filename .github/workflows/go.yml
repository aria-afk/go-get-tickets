# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
# Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # Provide the password for postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

          # echo "::set-output name=go-build::$(go env GOCACHE)"
          # echo "::set-output name=go-mod::$(go enVv GOMODCACHE)"
    - id: go-cache-paths
      run: |
        echo "{go-build}={$(go env GOCACHE)} >> $GITHUB_OUTPUT"
        echo "{go-mod}={$(go env GOMODCACHE)} >> $GITHUB_OUTPUT"

      # Cache go build cache, used to speedup go test
    - name: Go Build Cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

    # Cache go mod cache, used to speedup builds
    - name: Go Mod Cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.0'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
      env:
        PG_CONN_STRING: postgresql://postgres:postgres@localhost/template1?sslmode=disable
